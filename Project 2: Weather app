import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';


void main() {
  runApp(const MyApp());
}


class MyApp extends StatelessWidget {
  const MyApp({super.key});


  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Weather App',
      theme: ThemeData(primarySwatch: Colors.blue),
      home: const HomePage(),
    );
  }
}


class HomePage extends StatefulWidget {
  const HomePage({super.key});


  @override
  _HomePageState createState() => _HomePageState();
}


class _HomePageState extends State<HomePage> {
  String city = "Delhi";
  String apiKey = "56b71e152d35c62719e6208e7be45b4d";
  String temperature = "Loading...";
  List<String> forecast = [];


  @override
  void initState() {
    super.initState();
    fetchWeather();
  }


  Future<void> fetchWeather() async {
    final url = "https://api.openweathermap.org/data/2.5/forecast?q=$city&appid=$apiKey&units=metric";
    final response = await http.get(Uri.parse(url));


    if (response.statusCode == 200) {
      final data = jsonDecode(response.body);
      setState(() {
        temperature = "${data['list'][0]['main']['temp']}°C";
        forecast = List.generate(7, (i) {
          return "${data['list'][i * 8]['dt_txt'].split(' ')[0]}: ${data['list'][i * 8]['main']['temp']}°C";
        });
      });
    } else {
      setState(() {
        temperature = "Error";
        forecast = ["Failed to load data"];
      });
    }
  }


  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('Weather App')),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Text('Current Temperature in $city: $temperature', style: const TextStyle(fontSize: 18)),
            const SizedBox(height: 20),
            ElevatedButton(onPressed: fetchWeather, child: const Text('Refresh')),
            const SizedBox(height: 20),
            const Text('7-Day Forecast:', style: TextStyle(fontSize: 18)),
            Column(
              children: forecast.map((day) => Text(day)).toList(),
            ),
          ],
        ),
      ),
    );
  }
}

